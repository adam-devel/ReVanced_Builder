name: Update

on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: Force rebuild
        type: boolean
        required: false
        default: false
  schedule:
    - cron: '0 0/2 * * *'
jobs:
  query:
    name: Check for updates
    runs-on: ubuntu-latest
    env:
      yt_beta_version:   17.49.32
      yt_latest_version: 17.48.43 
      yt_fit_version:    17.45.36
    outputs:
      # Download urls
      youtube_beta_url:       "${{ steps.scrape.outputs.youtube_beta_url }}"
      youtube_latest_url:     "${{ steps.scrape.outputs.youtube_latest_url }}"
      youtube_fit_url:        "${{ steps.scrape.outputs.youtube_fit_url }}"
      cli_url:                "${{ steps.scrape.outputs.cli_url }}"
      patches_url:            "${{ steps.scrape.outputs.patches_url }}"
      integrations_url:       "${{ steps.scrape.outputs.integrations_url }}"
      # Version informations
      youtube_beta_version:   "${{ steps.scrape.outputs.youtube_beta_version }}"
      youtube_latest_version: "${{ steps.scrape.outputs.youtube_latest_version }}"
      youtube_fit_version:    "${{ steps.scrape.outputs.youtube_fit_version }}"
      cli_version:            "${{ steps.scrape.outputs.cli_version }}"
      patches_version:        "${{ steps.scrape.outputs.patches_version }}"
      integrations_version:   "${{ steps.scrape.outputs.integrations_version }}"
      # Conditions
      should_update:          "${{ steps.compare.outputs.is_modified }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with: 
          node-version: '16'
      - name: Install NPM Dependencies
        run: npm --prefix ./scraper ci ./scraper
      - name: Scrape
        id: scrape
        run: |
          # Specify endpoints
          revanced_endpoint=https://releases.rvcd.win/tools
          github_endpoint=https://api.github.com

          # Gather metadata
             revanced_json_data=$(jq -r .tools <<< "$(curl -sL $revanced_endpoint)")
                   revanced_cli=$(jq -r <<< $revanced_json_data '.[1]')
               revanced_patches=$(jq -r <<< $revanced_json_data '.[4]')
          revanced_integrations=$(jq -r <<< $revanced_json_data '.[5]')
                        jhc_cli=$(curl -sL \
                          -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          "${github_endpoint}/repos/j-hc/revanced-cli/releases/latest"\
                        )

          # Output download Urls
          echo   youtube_beta_url=$(node ./scraper/ $yt_beta_version)   >> $GITHUB_OUTPUT
          echo youtube_latest_url=$(node ./scraper/ $yt_latest_version) >> $GITHUB_OUTPUT
          echo    youtube_fit_url=$(node ./scraper/ $yt_fit_version)    >> $GITHUB_OUTPUT
          echo        patches_url=$(jq -r <<< $revanced_patches '.browser_download_url')      >> $GITHUB_OUTPUT
          echo   integrations_url=$(jq -r <<< $revanced_integrations '.browser_download_url') >> $GITHUB_OUTPUT
          echo            cli_url=$(jq -r <<< $jhc_cli '.assets[0].browser_download_url')     >> $GITHUB_OUTPUT
          #echo            cli_url=$(jq -r <<< $revanced_cli '.browser_download_url')          >> $GITHUB_OUTPUT

          # Output versions
          echo   youtube_beta_version=$yt_beta_version                               >> $GITHUB_OUTPUT
          echo youtube_latest_version=$yt_latest_version                             >> $GITHUB_OUTPUT
          echo    youtube_fit_version=$yt_fit_version                                >> $GITHUB_OUTPUT
          echo        patches_version=$(jq -r <<< $revanced_patches '.version')      >> $GITHUB_OUTPUT
          echo   integrations_version=$(jq -r <<< $revanced_integrations '.version') >> $GITHUB_OUTPUT
          echo            cli_version=$(jq -r <<< $jhc_cli '.name')                  >> $GITHUB_OUTPUT
          #echo            cli_version=$(jq -r <<< $revanced_cli '.version')          >> $GITHUB_OUTPUT

          # Update versions
          mkdir -p versions
          jq > versions/revanced-cli          -r '.version' <<< $revanced_cli         
          jq > versions/revanced-patches      -r '.version' <<< $revanced_patches     
          jq > versions/revanced-integrations -r '.version' <<< $revanced_integrations
          jq > versions/jhc-cli               -r '.name'    <<< $jhc_cli              

      - name: Compare
        id: compare
        run: echo is_modified=$([ -z "`git status --porcelain`" ] && echo "no" || echo "yes") >> $GITHUB_OUTPUT

      - name: Commit the updates
        if: steps.compare.outputs.is_modified == 'yes'
        uses: EndBug/add-and-commit@v9
        with:
          add: 'versions'
          message: automated update
          push: true
  build:
    needs: query
    if: ${{needs.query.outputs.should_update == 'yes' || inputs.rebuild}}
    uses: ./.github/workflows/build.yml
    with: 
      youtube_beta_url:        "${{ needs.query.outputs.youtube_beta_url }}"
      youtube_latest_url:      "${{ needs.query.outputs.youtube_latest_url }}"
      youtube_fit_url:         "${{ needs.query.outputs.youtube_fit_url }}"
      cli_url:                 "${{ needs.query.outputs.cli_url }}"
      patches_url:             "${{ needs.query.outputs.patches_url }}"
      integrations_url:        "${{ needs.query.outputs.integrations_url }}"
      youtube_beta_version:    "${{ needs.query.outputs.youtube_beta_version }}"
      youtube_latest_version:  "${{ needs.query.outputs.youtube_latest_version }}"
      youtube_fit_version:     "${{ needs.query.outputs.youtube_fit_version }}"
      cli_version:             "${{ needs.query.outputs.cli_version }}"
      patches_version:         "${{ needs.query.outputs.patches_version }}"
      integrations_version:    "${{ needs.query.outputs.integrations_version }}"
