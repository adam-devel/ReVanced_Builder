name: Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0/2 * * *'
jobs:
  query:
    name: Check for updates
    runs-on: ubuntu-latest
    env:
      yt_beta_version:   17.41.36
      yt_latest_version: 17.40.41 
      yt_fit_version:    17.36.37
    outputs:
      youtube_beta_url: "${{ steps.scrape.outputs.youtube_beta_url }}"
      youtube_latest_url: "${{ steps.scrape.outputs.youtube_latest_url }}"
      youtube_fit_url: "${{ steps.scrape.outputs.youtube_fit_url }}"
      cli_url: "${{ steps.scrape.outputs.cli_url }}"
      patches_url: "${{ steps.scrape.outputs.patches_url }}"
      integrations_url: "${{ steps.scrape.outputs.integrations_url }}"

      youtube_beta_version: "${{ steps.scrape.outputs.youtube_beta_version }}"
      youtube_latest_version: "${{ steps.scrape.outputs.youtube_latest_version }}"
      youtube_fit_version: "${{ steps.scrape.outputs.youtube_fit_version }}"
      cli_version: "${{ steps.scrape.outputs.cli_version }}"
      patches_version: "${{ steps.scrape.outputs.patches_version }}"
      integrations_version: "${{ steps.scrape.outputs.integrations_version }}"

      should_update: "${{ steps.compare.outputs.is_modified }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with: 
          node-version: '16'
      - name: Install NPM Dependencies
        run: npm ci
      - name: Scrape
        id: scrape
        run: |
          # Specify endpoints
          revanced_endpoint=https://releases.rvcd.win/tools
          github_endpoint=https://api.github.com

          # Get revanced tools metadata
          revanced_json_data=$(jq -r .tools <<< "$(curl -sL $revanced_endpoint)")
          revanced_cli=$(jq -r <<< $revanced_json_data '.[1]')
          revanced_patches=$(jq -r <<< $revanced_json_data '.[4]')
          revanced_integrations=$(jq -r <<< $revanced_json_data '.[5]')
          # Get JHC's cli metadata
          echo ::set-output name=integrations_version::$(jq -r <<< $revanced_integrations 'version')
          jhc_cli=$(curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${github_endpoint}/repos/j-hc/revanced-cli/releases/latest")

          # Output download Urls
          echo ::set-output name=youtube_beta_url::$(node scrape-youtube-download-link.mjs $YT_BETA_VERSION)
          echo ::set-output name=youtube_latest_url::$(node scrape-youtube-download-link.mjs $YT_LATEST_VERSION)
          echo ::set-output name=youtube_fit_url::$(node scrape-youtube-download-link.mjs $YT_FIT_VERSION)
            #echo ::set-output name=cli::$(jq -r <<< $jhc_cli_data '.assets[0].browser_download_url')
          echo ::set-output name=cli_url::$(jq -r <<< $revanced_cli 'download_url')
          echo ::set-output name=patches_url::$(jq -r <<< $revanced_patches 'download_url')
          echo ::set-output name=integrations_url::$(jq -r <<< $revanced_integrations 'download_url')

          # Output versions
          echo ::set-output name=youtube_beta_version::$yt_beta_version
          echo ::set-output name=youtube_latest_version::$yt_latest_version
          echo ::set-output name=youtube_fit_version::$yt_fit_version
            #echo ::set-output name=cli_version::$(jq -r <<< $jhc_cli_data '.name')
          echo ::set-output name=cli_version::$(jq -r <<< $revanced_cli 'version')
          echo ::set-output name=patches_version::$(jq -r <<< $revanced_patches 'version')
          echo ::set-output name=integrations_version::$(jq -r <<< $revanced_integrations 'version')

          # Update versions
          mkdir -p versions
          jq -r '.version' <<< $revanced_cli          > versions/revanced-cli.json 
          jq -r '.version' <<< $revanced_patches      > versions/revanced-patches.json 
          jq -r '.version' <<< $revanced_integrations > versions/revanced-integrations.json 
          jq -r '.name'    <<< $jhc_cli               > versions/jhc-cli.json 

      - name: Compare
        id: compare
        run: echo ::set-output name=is_modified::$([ -z "`git status --porcelain`" ] && echo "no" || echo "yes")

      - name: Commit the updates
        if: steps.compare.outputs.is_modified == 'yes'
        uses: EndBug/add-and-commit@v9
        with:
          add: 'build-tools'
          message: automated update
          push: true
          
  build:
    needs: query
    if: needs.query.outputs.should_update == 'yes'
    uses: ./.github/workflows/build.yml
    with: 
      youtube_beta_url: "${{ needs.query.outputs.youtube_beta_url }}"
      youtube_latest_url: "${{ needs.query.outputs.youtube_latest_url }}"
      youtube_fit_url: "${{ needs.query.outputs.youtube_fit_url }}"
      cli_url: "${{ needs.query.outputs.cli_url }}"
      patches_url: "${{ needs.query.outputs.patches_url }}"
      integrations_url: "${{ needs.query.outputs.integrations_url }}"
      youtube_beta_version: "${{ needs.query.outputs.youtube_beta_version }}"
      youtube_latest_version: "${{ needs.query.outputs.youtube_latest_version }}"
      youtube_fit_version: "${{ needs.query.outputs.youtube_fit_version }}"
      cli_version: "${{ needs.query.outputs.cli_version }}"
      patches_version: "${{ needs.query.outputs.patches_version }}"
      integrations_version: "${{ needs.query.outputs.integrations_version }}"
